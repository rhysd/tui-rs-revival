on: push

name: CI

env:
  CI_CARGO_MAKE_VERSION: 0.35.16

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: ["1.59.0", "stable"]
    steps:
      - uses: hecrj/setup-rust-action@50a120e4d34903c2c1383dec0e9b1d349a9cc2b1
        with:
          rust-version: ${{ matrix.rust }}
          components: rustfmt,clippy
      - uses: actions/checkout@v1
      - name: "Cache cargo make"
        id: cache-cargo-make
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/cargo-make
          key: ${{ runner.os }}-${{ matrix.rust }}-cargo-make-${{ env.CI_CARGO_MAKE_VERSION }}
      - name: "Install cargo-make"
        if: steps.cache-cargo-make.outputs.cache-hit != 'true'
        run: cargo install cargo-make --version ${{ env.CI_CARGO_MAKE_VERSION }}
      - name: "Format / Build / Test"
        run: cargo make ci
        env:
          RUST_BACKTRACE: full
  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      matrix:
        rust: ["1.59.0", "stable"]
    steps:
      - uses: actions/checkout@v1
      - uses: hecrj/setup-rust-action@50a120e4d34903c2c1383dec0e9b1d349a9cc2b1
        with:
          rust-version: ${{ matrix.rust }}
          components: rustfmt,clippy
      - uses: actions/checkout@v1
      - name: "Cache cargo make"
        id: cache-cargo-make
        uses: actions/cache@v3
        with:
          path: ~\.cargo\bin\cargo-make.exe
          key: ${{ runner.os }}-${{ matrix.rust }}-cargo-make-${{ env.CI_CARGO_MAKE_VERSION }}
      - name: "Install cargo-make"
        if: steps.cache-cargo-make.outputs.cache-hit != 'true'
        run: cargo install cargo-make --version ${{ env.CI_CARGO_MAKE_VERSION }}
      - name: "Format / Build / Test"
        run: cargo make ci
        env:
          RUST_BACKTRACE: full
